resources:
 repositories:
   - repository: Mock_code_repo
     type: github
     endpoint: GitHubConn
     name: vinitamishra15/Mock_code_repo
   - repository: BranchMerge
     type: github
     endpoint: GitHubConn
     name: vinitamishra15/BranchMerge

trigger:
- main

pool: Default

variables:
  serviceNowInstance: 'https://dev212832.service-now.com'
  userName: 'admin'
  password: 'tt!rSy25Y^SK'
  changeRequestSysId: ''

stages:
  - stage: CreateChangeRequest
    jobs:
      - job: CreateChange
        steps:
          - task: PowerShell@2
            name: CreateChangeTask
            inputs:
              targetType: 'inline'
              script: |
                $url = "$(serviceNowInstance)/api/now/table/change_request"
                $body = @{
                  short_description = "Azure Pipeline Change Request - CR approval"
                  description = "Change Request created by Azure Pipeline to approve and deploy application"
                  approval = "requested"
                } | ConvertTo-Json

                Write-Host "Host URL: $url"
                $response = Invoke-RestMethod -Uri $url -Method Post -Headers @{
                  Authorization = "Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$(userName):$(password)"))
                  'Content-Type' = 'application/json'
                } -Body $body
                
                if ($response.result) {
                  Write-Host "Change Request created successfully."
                  Write-Host "CR Sys ID:" $response.result.sys_id
                  Write-Host "CR Number:" $response.result.number

                # Set output variable with the CR sys_id
                  Write-Output ("##vso[task.setvariable variable=changeRequestSysId;isOutput=true]$($response.result.sys_id)")
                } else {
                  Write-Host "Failed to create Change Request."
                  exit 1
                }
          - task: PowerShell@2
            displayName: 'Check CR approval status'
            condition: and(succeeded(), eq(variables['environment'], 'production'))
            inputs:
              targetType: 'inline'
              script: |
                $changeRequestSysId = '$(changeRequestSysId)'
                $statusCheckUrl = "${{ variables.servicenowInstance }}/api/now/table/change_request/$changeRequestSysId"
                
                do {
                  # Call ServiceNow to get the status of the CR
                  $response = Invoke-RestMethod -Uri $statusCheckUrl -Method Get -Headers @{Authorization=("Basic " + $credentials); "Content-Type"="application/json"}
                  $changeRequestState = $response.result.state

                  # Check if status is "Scheduled"
                  if ($changeRequestState -eq '3') {
                    Write-Output "Change Request Scheduled"
                    break
                  }

                  # Wait for a bit before retrying
                  Start-Sleep -Seconds 30
                  Write-Output "Waiting for Change Request to be Scheduled. Current state: $changeRequestState"
                } while ($changeRequestState -ne '3')

                # Set the variable to trigger the next stage
                Write-Output "##vso[task.setvariable variable=changeRequestState;isOutput=true]$changeRequestState"

  - stage: PostApproval
    dependsOn: CreateChangeRequest
    condition: succeeded()
    jobs:
      - job: PostApprovalActions
        steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "CR completed"
