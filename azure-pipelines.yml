trigger:
  branches:
    include:
      - main

pool: Default

variables:
  environment: 'production'  # Change to 'stage' or 'production' as needed
  servicenowInstance: 'https://dev212832.service-now.com'
  servicenowUser: 'admin' # ServiceNow username stored as a secret
  servicenowPassword: 'tt!rSy25Y^SK' # ServiceNow password stored as a secret

stages:
- stage: CreateAndMonitorChangeRequest
  displayName: "Create and Monitor Change Request"
  condition: eq(variables['environment'], 'production')  # Only run if environment is production
  jobs:
    - job: CreateChangeRequest
      displayName: "Create Change Request in ServiceNow"
      steps:
        - task: PowerShell@2
          displayName: "Create Change Request"
          inputs:
            targetType: 'inline'
            script: |
              # Create change request in ServiceNow
              $servicenowInstance = "$(servicenowInstance)"
              $changeRequestUrl = "$servicenowInstance/api/now/table/change_request"
              $auth = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes("$(servicenowUser):$(servicenowPassword)"))

              # Change Request body (customize based on your ServiceNow change request schema)
              $changeRequestBody = @{
                short_description = "Automated Change Request for Deployment"
                description = "Deployment to production environment"
                category = "Software"
                type = "Normal"
                # Add other fields as needed
              } | ConvertTo-Json

              # Make HTTP POST request to create change request
              $changeResponse = Invoke-RestMethod -Uri $changeRequestUrl -Method Post -Headers @{
                  Authorization = "Basic $auth"
                  "Content-Type" = "application/json"
              } -Body $changeRequestBody

              # Extract change request sys_id and state
              $changeRequestSysId = $changeResponse.result.sys_id
              Write-Host "Created Change Request with sys_id: $changeRequestSysId"
              Write-Host "CR Number:" $response.result.number

              # Store the sys_id as a pipeline variable for next steps
              Write-Host "##vso[task.setvariable variable=changeRequestSysId]$changeRequestSysId"

        - task: PowerShell@2
          displayName: "Monitor Change Request until Scheduled"
          inputs:
            targetType: 'inline'
            script: |
              # Initialize
              $servicenowInstance = "$(servicenowInstance)"
              $changeRequestSysId = "$(changeRequestSysId)"
              $checkUrl = "$servicenowInstance/api/now/table/change_request/$changeRequestSysId"
              $auth = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes("$(servicenowUser):$(servicenowPassword)"))
              $status = ""

              # Keep checking the status until it becomes Scheduled
              while ($true) {
                  $response = Invoke-RestMethod -Uri $checkUrl -Method Get -Headers @{
                      Authorization = "Basic $auth"
                      "Content-Type" = "application/json"
                  }
                  $status = $response.result.phase_state
                  Write-Host "Current Change Request state: $status"

                  if ($status -eq "Scheduled") {
                      Write-Host "Change Request is Scheduled."
                      break
                  }

                  Start-Sleep -Seconds 30  # Wait before the next check
              }

- stage: LogCompletion
  displayName: "Log Change Request Completion"
  dependsOn: CreateAndMonitorChangeRequest
  condition: eq(variables['environment'], 'production')  # Only run if environment is production
  jobs:
    - job: CompletionLog
      displayName: "Completion Log"
      steps:
        - powershell: |
            Write-Host 'CR completed'
          displayName: "Log CR Completion"
